#!/bin/zsh
# xc - Search and Launch XC Projects and Workspaces in selected xcode
#
# Usage:
#   xc [DIRECTORY]                  Open some XC file in specified directory. Directory defaults to '.'
#   xc -o [DIRECTORY]               Like previous command, but closes all xcode beforehand (Only Xcode)
#
# Useful for:
# - Quickly open xcodeproj in current directory without fishing in Finder.
# - Quickly selecting one of many xcworkspace variants in directory.

# Options
ONLY_XCODE=0        # Whether or not this should be only xcode
while getopts ":o" opt; do
  case $opt in
    o)
        ONLY_XCODE=1
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        ;;
  esac
done
shift $(($OPTIND - 1))

# Only Xcode Option
if [ "$ONLY_XCODE" -eq 1 ]; then
    pkill Xcode
fi

# Find Selected Xcode
CUR_XC=$(xcode-select -p | grep -oe ".*\.app")

# First nonoption as search directory
SEARCH_DIR=${1:-'.'}

# Find XC Files
PROJ_FILES=($SEARCH_DIR/*.xcodeproj(N))
WS_FILES=($SEARCH_DIR/*.xcworkspace(N))
PKG_FILES=($SEARCH_DIR/Package.swift(N))
XC_FILES=(
    $PROJ_FILES
    $WS_FILES
    $PKG_FILES
)

# No files found message
[[ ${#XC_FILES[@]} == 0 ]] && echo "No files found"

# Exit if 1
if [[ ${#XC_FILES[@]} == 1 ]]; then
    open -Fa "$CUR_XC" "$XC_FILES[1]"
    exit
fi

# Print in single column
COLUMNS=1

# Select and open
select f in $XC_FILES; do

    if [ -z "$f" ]; then
        exit 1
    fi

    echo "Opening $f"
    open -Fa $CUR_XC $f
    break
done

